# Literals are values typed into source code. 

print "Hello, world!\n";    # "Hello, world\n" is a string literal.

print 7;                    # "7" is a number literal.

# A Scalar is one piece of data in Perl, it can be acted on with operators.
# Aditionally it can be stored and read or written to a file.
# A Scalar can come in two forms, either numbers or strings. 

Examples of numbers (
    100             # Decimal number.
    -5293
    93e20           # 'e' means that the number to the left is to the power of the right.
    7_393_486_023   # _ can be used to make numbers easier to read. 
    12324.21        # Floating point number.
    0144            # Octal number.
    0x64            # Hex number.
    0b1100100       # Binary number.
)

print "Binary 0b1100100 = ", 0b1100100, "\n";

Examples of operators (
    +   # Addition.
    -   # Subtraction.
    *   # Multiplication.
    /   # Division.
    **  # Exponentiation, to the power of.
    %   # Modulus, the remainder of a division. 
)

# String is 0 or more characters surrounded by "" or ''.

Examples of strings (
    print "";                   # An empty string. 
    print "Conc"."atenates\n";  # A '.' between two stings joins them.
    print "Slick" x 7;          # This would print "Slick" 7 times. 
    print 'abc\n';              # Would print out \n literally.
    
)

# Examples of backslash escape sequences (
    \n                  # Newline.
    \r                  # Return. 
    \t                  # Tab.
    \f                  # Formfeed.
    \b                  # Backspace.
    \a                  # Bell.
    \e                  # Escape (ASCII escape character).
    \007                # Any octal ASCII value (007=bell).
    \x7f                # Any two-digit hex ASCII value (7f=delete).
    \x{2744}            # Any hes Unicode point (U+2744=snowflake).
    \N{CHARACTER NAME}  # Any Unicode code point, by name. 
    \Cc                 # A "control" character (here, Ctrl-C).
    \\                  # Bachslash.
    \"                  # Doube quote.
    \l                  # Lowercase nest letter.
    \L                  # Lowercase all following letters until \E.
    \u                  # Uppercase next letter.
    \U                  # Uppercase all following letters until \E. 
    \Q                  # Quote nonword characters by adding a backslash until \E.
    \E                  # End \L, \U or \Q.
)